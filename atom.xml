<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Joey&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-03-03T10:20:50.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Joey</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>阿里巴巴前端面试总结(题目+答案)</title>
    <link href="http://yoursite.com/2018/03/26/2018%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    <id>http://yoursite.com/2018/03/26/2018阿里巴巴面试题/</id>
    <published>2018-03-26T02:54:44.258Z</published>
    <updated>2018-03-03T10:20:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、使用css实现一个持续的动画效果"><a href="#1、使用css实现一个持续的动画效果" class="headerlink" title="1、使用css实现一个持续的动画效果"></a>1、使用css实现一个持续的动画效果</h2><pre><code><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">animation</span>:mymove <span class="number">5s</span> infinite</span><br><span class="line"><span class="variable">@keyframes</span> mymove &#123;</span><br><span class="line">from &#123;<span class="attribute">top</span>:<span class="number">0px</span>;&#125;</span><br><span class="line"><span class="selector-tag">to</span> &#123;<span class="attribute">top</span>:<span class="number">200px</span>;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></code></pre><p>主要考：<code>animation</code>的用法</p><table><thead><tr><th style="text-align:left">值</th><th style="text-align:right">描述</th></tr></thead><tbody><tr><td style="text-align:left">animation-name</td><td style="text-align:right">规定需要绑定到选择器的 keyframe名称</td></tr><tr><td style="text-align:left">animation-duration</td><td style="text-align:right">规定完成动画所花费的时间，以秒或毫秒计</td></tr><tr><td style="text-align:left">animation-timing-function</td><td style="text-align:right">规定动画的速度曲线</td></tr><tr><td style="text-align:left">animation-delay</td><td style="text-align:right">规定动画开始之前的延迟</td></tr><tr><td style="text-align:left">animation-iteration-count</td><td style="text-align:right">规定动画应该播放的次数</td></tr><tr><td style="text-align:left">animation-direction</td><td style="text-align:right">规定是否应该轮流反向播放动画</td></tr></tbody></table><h2 id="2、使用js实现一个持续的动画效果"><a href="#2、使用js实现一个持续的动画效果" class="headerlink" title="2、使用js实现一个持续的动画效果"></a>2、使用js实现一个持续的动画效果</h2><p>最开始的思路是用定时器实现，最后没有想的太完整，面试官给出的答案是用<code>requestAnimationFrame</code>。</p><pre><code><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> e = <span class="built_in">document</span>.getElementById(<span class="string">'e'</span>)</span><br><span class="line"><span class="keyword">var</span> falg = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">var</span> left = <span class="number">0</span>;</span><br><span class="line">setInterval(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">left == <span class="number">0</span> ? flag = <span class="literal">true</span> : left == <span class="number">100</span> ? flag = <span class="literal">false</span> : <span class="string">''</span></span><br><span class="line">flag ? e.style.left = <span class="string">' $&#123;left++&#125;px'</span> : e.style.left = <span class="string">'$&#123;left--&#125;px'</span></span><br><span class="line">&#125;,<span class="number">1000</span>/<span class="number">60</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//兼容性处理</span></span><br><span class="line"><span class="built_in">window</span>.requestAnimationFrame = (<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">window</span>.requestAnimationFrame       ||</span><br><span class="line">   <span class="built_in">window</span>.webkitRequestAnimationFrame ||</span><br><span class="line">   <span class="built_in">window</span>.mozRequestAnaimationFrame   ||</span><br><span class="line">   <span class="function"><span class="keyword">function</span>(<span class="params">callback</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">window</span>.setTimeout(callback,<span class="number">100</span>/<span class="number">60</span>)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&#125;) ();</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> e = <span class="built_in">document</span>.getElementById(<span class="string">"e"</span>);</span><br><span class="line"><span class="keyword">var</span> flag = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">var</span> left = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">left == <span class="number">0</span> ? flag = <span class="literal">true</span> : left == <span class="number">100</span> ? flag = <span class="literal">false</span> :<span class="string">''</span>;</span><br><span class="line">flag ？ e.style.left = <span class="string">'$&#123;left++&#125;px'</span>;</span><br><span class="line">e.style.left = <span class="string">'$&#123;left--&#125;px'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">(<span class="function"><span class="keyword">function</span> <span class="title">animloop</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">render();</span><br><span class="line">requestAnimationFrame (animloop);</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure></code></pre><p>使用<code>requestAnimationFrame</code>的优势：</p><ul><li>浏览器可以优化并行的动画动作，更合理的重新排列动作序列，并把能够合并的动作放在一个渲染周期内完成，从而呈现出更流畅的动画效果</li><li>解决毫秒的不精确性</li><li>避免过度渲染（渲染频率太高、 tab 不可见暂停等等）<br>注： <code>requestAnimFrame</code> 和 定时器一样也头一个类似的清除方法<code>cancelAnimationFrame</code>。</li></ul><h2 id="3、右边宽度固定，左边自适应"><a href="#3、右边宽度固定，左边自适应" class="headerlink" title="3、右边宽度固定，左边自适应"></a>3、右边宽度固定，左边自适应</h2><h3 id="第一种"><a href="#第一种" class="headerlink" title="第一种"></a>第一种</h3><pre><code><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">body&#123;</span></span><br><span class="line"><span class="css"><span class="selector-tag">display</span><span class="selector-pseudo">:flex</span>;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.left</span>&#123;</span></span><br><span class="line"><span class="undefined">background-color: rebeccapurple;</span></span><br><span class="line"><span class="undefined">  height: 200px;</span></span><br><span class="line"><span class="undefined">  flex: 1;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.right</span>&#123;</span></span><br><span class="line"><span class="undefined">background-color: red;</span></span><br><span class="line"><span class="undefined">  height: 200px;</span></span><br><span class="line"><span class="undefined">  width: 100px;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></code></pre><h3 id="第二种"><a href="#第二种" class="headerlink" title="第二种"></a>第二种</h3><pre><code><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    div &#123;</span></span><br><span class="line"><span class="undefined">        height: 200px;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.left</span> &#123;</span></span><br><span class="line"><span class="undefined">        float: right;</span></span><br><span class="line"><span class="undefined">        width: 200px;</span></span><br><span class="line"><span class="undefined">        background-color: rebeccapurple;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="css">    <span class="selector-class">.right</span> &#123;</span></span><br><span class="line"><span class="undefined">        margin-right: 200px;</span></span><br><span class="line"><span class="undefined">        background-color: red;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></code></pre><h2 id="4、水平垂直居中"><a href="#4、水平垂直居中" class="headerlink" title="4、水平垂直居中"></a>4、水平垂直居中</h2><h3 id="第一种-1"><a href="#第一种-1" class="headerlink" title="第一种"></a>第一种</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#container</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>:relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#center</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>:<span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-50%,-50%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第二种-1"><a href="#第二种-1" class="headerlink" title="第二种"></a>第二种</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#container</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>:relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#center</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">left</span>:<span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin</span>:-<span class="number">50px</span> <span class="number">0</span> <span class="number">0</span> -<span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第三种"><a href="#第三种" class="headerlink" title="第三种"></a>第三种</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#container</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>:relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#center</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">margin</span>:auto;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>:<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第四种-flex"><a href="#第四种-flex" class="headerlink" title="第四种 flex"></a>第四种 flex</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#container</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>:flex;</span><br><span class="line">    <span class="attribute">justify-content</span>:center;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5、四种定位的区别"><a href="#5、四种定位的区别" class="headerlink" title="5、四种定位的区别"></a>5、四种定位的区别</h2><ul><li>static 是默认值</li><li>relative 相对定位 相对于自身原有位置进行偏移，仍处于标准文档流中</li><li>absolute 绝对定位 相对于最近的已定位的祖先元素, 有已定位(指 position不是 static的元素)祖先元素, 以最近的祖先元素为参考标准。如果无已定位祖先元素, 以 body元素为偏移参照基准, 完全脱离了标准文档流。</li><li>fixed 固定定位的元素会相对于视窗来定位,这意味着即便页面滚动，它还是会停留在相同的位置。一个固定定位元素不会保留它原本在页面应有的空隙。</li></ul><h2 id="6、let与var的区别？"><a href="#6、let与var的区别？" class="headerlink" title="6、let与var的区别？"></a>6、let与var的区别？</h2><p>let 为 ES6 新添加申明变量的命令，它类似于 var，但是有以下不同：</p><ul><li>var 声明的变量，其作用域为该语句所在的函数内，且存在变量提升现象</li><li>let 声明的变量，其作用域为该语句所在的代码块内，不存在变量提升</li><li>let 不允许重复声明.</li></ul><h2 id="7、为什么-var-可以重复声明？"><a href="#7、为什么-var-可以重复声明？" class="headerlink" title="7、为什么 var 可以重复声明？"></a>7、为什么 var 可以重复声明？</h2><p>当我们执行代码时，我们可以简单的理解为新变量分配一块儿内存，命名为 a，并赋值为 2，但在运行的时候编译器与引擎还会进行两项额外的操作：判断变量是否已经声明：</p><ul><li>首先编译器对代码进行分析拆解，从左至右遇见 var a，则编译器会询问作用域是否已经存在叫 a 的变量了，如果不存在，则招呼作用域声明一个新的变量 a，若已经存在，则忽略 var 继续向下编译，这时 a = 2被编译成可执行的代码供引擎使用。</li><li>引擎遇见 a=2时同样会询问在当前的作用域下是否有变量 a，若存在，则将 a赋值为 2（由于第一步编译器忽略了重复声明的var，且作用域中已经有 a，所以重复声明会发生值得覆盖而并不会报错）。若不存在，则顺着作用域链向上查找，若最终找到了变量 a则将其赋值 2，若没有找到，则招呼作用域声明一个变量 a并赋值为 2。 参考链接</li></ul><h2 id="8、封装一个函数，参数是定时器的时间，-then执行回调函数。"><a href="#8、封装一个函数，参数是定时器的时间，-then执行回调函数。" class="headerlink" title="8、封装一个函数，参数是定时器的时间，.then执行回调函数。"></a>8、封装一个函数，参数是定时器的时间，.then执行回调函数。</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sleep</span> (<span class="params">time</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve</span>) =&gt;</span> setTimeout(resolve,time));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="9、一个关于-this-指向的问题。"><a href="#9、一个关于-this-指向的问题。" class="headerlink" title="9、一个关于 this 指向的问题。"></a>9、一个关于 this 指向的问题。</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">obj = &#123;</span><br><span class="line">name:<span class="string">'a'</span>,</span><br><span class="line">getName:function()&#123;</span><br><span class="line">console.log(this.name)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">var</span> fn = obj.getName</span><br><span class="line">obj.getName()</span><br><span class="line"><span class="selector-tag">var</span> fn2 = obj.getName()</span><br><span class="line"><span class="function"><span class="title">fn</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="title">fn2</span><span class="params">()</span></span></span><br></pre></td></tr></table></figure><h2 id="10、CommonJS-中的-require-exports-和-ES6-中的-import-export-区别？"><a href="#10、CommonJS-中的-require-exports-和-ES6-中的-import-export-区别？" class="headerlink" title="10、CommonJS 中的 require/exports 和 ES6 中的 import/export 区别？"></a>10、CommonJS 中的 require/exports 和 ES6 中的 import/export 区别？</h2><ul><li>CommonJS 模块的重要特性是加载时执行，即脚本代码在 require 的时候，就会全部执行。一旦出现某个模块被”循环加载”，就只输出已经执行的部分，还未执行的部分不会输出。</li><li>ES6 模块是动态引用，如果使用 import 从一个模块加载变量，那些变量不会被缓存，而是成为一个指向被加载模块的引用，需要开发者自己保证，真正取值的时候能够取到值。</li><li>import/export 最终都是编译为 require/exports 来执行的。</li><li>CommonJS 规范规定，每个模块内部， module 变量代表当前模块。这个变量是一个对象，它的 exports 属性（即module.exports ）是对外的接口。加载某个模块，其实是加载该模块的 module.exports 属性。</li><li>export 命令规定的是对外的接口，必须与模块内部的变量建立一一对应关系。</li></ul><h2 id="11、一行代码实现数组去重？"><a href="#11、一行代码实现数组去重？" class="headerlink" title="11、一行代码实现数组去重？"></a>11、一行代码实现数组去重？</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[...new Set([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>,'a',<span class="number">1</span>,'a'])]</span><br></pre></td></tr></table></figure><h2 id="12、使用addEventListener点击li弹出内容，并且动态添加li之后有效"><a href="#12、使用addEventListener点击li弹出内容，并且动态添加li之后有效" class="headerlink" title="12、使用addEventListener点击li弹出内容，并且动态添加li之后有效"></a>12、使用addEventListener点击li弹出内容，并且动态添加li之后有效</h2><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">    &lt;<span class="built_in">li</span>&gt;<span class="number">1</span>&lt;/<span class="built_in">li</span>&gt;</span><br><span class="line">    &lt;<span class="built_in">li</span>&gt;<span class="number">2</span>&lt;/<span class="built_in">li</span>&gt;</span><br><span class="line">    &lt;<span class="built_in">li</span>&gt;<span class="number">3</span>&lt;/<span class="built_in">li</span>&gt;</span><br><span class="line">    &lt;<span class="built_in">li</span>&gt;<span class="number">4</span>&lt;/<span class="built_in">li</span>&gt;</span><br><span class="line">&lt;/ul&gt;</span><br><span class="line"></span><br><span class="line"><span class="built_in">var</span> ulNode = document.getElementById(<span class="string">"ul"</span>);</span><br><span class="line">ulNode.addEventListener('click',function(e)&#123;</span><br><span class="line"><span class="keyword">if</span> (e.target &amp;&amp; e.target.nodeName.toUpperCase() == <span class="string">"LI"</span>)&#123;</span><br><span class="line">alert(e.target.innerHTML)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;,<span class="literal">false</span>)</span><br></pre></td></tr></table></figure><h2 id="13、怎么判断两个对象相等？"><a href="#13、怎么判断两个对象相等？" class="headerlink" title="13、怎么判断两个对象相等？"></a>13、怎么判断两个对象相等？</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">obj=&#123;</span><br><span class="line"><span class="selector-tag">a</span>:<span class="number">1</span>,</span><br><span class="line"><span class="selector-tag">b</span>:<span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line">obj2=&#123;</span><br><span class="line"><span class="selector-tag">a</span>:<span class="number">1</span>,</span><br><span class="line"><span class="selector-tag">b</span>:<span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line">obj3=&#123;</span><br><span class="line"><span class="selector-tag">a</span>:<span class="number">1</span>,</span><br><span class="line"><span class="selector-tag">b</span>:<span class="number">2</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以转换为字符串来判断</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">JSON</span>.stringify(obj) == <span class="built_in">JSON</span>.stringify(obj2);<span class="comment">//true</span></span><br><span class="line"><span class="built_in">JSON</span>.stringify(obj) == <span class="built_in">JSON</span>.stringify(obj3);<span class="comment">//false</span></span><br></pre></td></tr></table></figure><h2 id="13、项目做过哪些性能优化？"><a href="#13、项目做过哪些性能优化？" class="headerlink" title="13、项目做过哪些性能优化？"></a>13、项目做过哪些性能优化？</h2><ul><li>减少 HTTP 请求数</li><li>减少 DNS 查询</li><li>使用 CDN</li><li>避免重定向</li><li>图片懒加载</li><li>减少 DOM 元素数量</li><li>减少 DOM 操作</li><li>使用外部 JavaScript 和 CSS</li><li>压缩 JavaScript 、 CSS 、字体、图片等</li><li>优化 CSS Sprite</li><li>使用 iconfont</li><li>字体裁剪</li><li>多域名分发划分内容到不同域名</li><li>尽量减少 iframe 使用</li><li>避免图片 src 为空</li><li>把脚本放在页面底部</li></ul><h2 id="14、模块化开发是怎么做的？"><a href="#14、模块化开发是怎么做的？" class="headerlink" title="14、模块化开发是怎么做的？"></a>14、模块化开发是怎么做的？</h2><p>使用命名空间。</p><h2 id="15、Vue-router-跳转和-location-href-有什么区别？"><a href="#15、Vue-router-跳转和-location-href-有什么区别？" class="headerlink" title="15、Vue router 跳转和 location.href 有什么区别？"></a>15、Vue router 跳转和 location.href 有什么区别？</h2><p><code>router</code> 是 <code>hash</code> 改变 <code>location.href</code> 是页面跳转，刷新页面</p><h2 id="16、Vue-双向绑定实现原理？"><a href="#16、Vue-双向绑定实现原理？" class="headerlink" title="16、Vue 双向绑定实现原理？"></a>16、Vue 双向绑定实现原理？</h2><p>通过 <code>Object.defineProperty</code> 实现的</p><h2 id="17、实现一下双向绑定"><a href="#17、实现一下双向绑定" class="headerlink" title="17、实现一下双向绑定"></a>17、实现一下双向绑定</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"txt"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"show-txt"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">        <span class="keyword">var</span> obj = &#123;&#125;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">Object</span>.defineProperty(obj, <span class="string">'txt'</span>, &#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">get</span>: <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> obj</span></span><br><span class="line"><span class="undefined">            &#125;,</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">set</span>: <span class="function"><span class="keyword">function</span> <span class="params">(newValue)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.getElementById(<span class="string">'txt'</span>).value = newValue</span></span><br><span class="line"><span class="javascript">                <span class="built_in">document</span>.getElementById(<span class="string">'show-txt'</span>).innerHTML = newValue</span></span><br><span class="line"><span class="undefined">            &#125;</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="javascript">        <span class="built_in">document</span>.addEventListener(<span class="string">'keyup'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span></span><br><span class="line"><span class="undefined">            obj.txt = e.target.value</span></span><br><span class="line"><span class="undefined">        &#125;)</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="18、React-和-Vue-有什么区别？"><a href="#18、React-和-Vue-有什么区别？" class="headerlink" title="18、React 和 Vue 有什么区别？"></a>18、React 和 Vue 有什么区别？</h2><h2 id="19、Set-和-Map-数据结构"><a href="#19、Set-和-Map-数据结构" class="headerlink" title="19、Set 和 Map 数据结构"></a>19、Set 和 Map 数据结构</h2><ul><li>ES6 提供了新的数据结构 Set 它类似于数组，但是成员的值都是唯一的，没有重复的值。</li><li>ES6 提供了 Map 数据结构。它类似于对象，也是键值对的集合，但是“键”的范围不限于字符串，各种类型的值（包括对象）都可以当作键。也就是说， Object 结构提供了“字符串—值”的对应， Map 结构提供了“值—值”的对应，是一种更完善的 Hash结构实现。</li></ul><h2 id="20、WeakMap-和-Map-的区别"><a href="#20、WeakMap-和-Map-的区别" class="headerlink" title="20、WeakMap 和 Map 的区别?"></a>20、WeakMap 和 Map 的区别?</h2><ul><li>WeakMap 结构与 Map 结构基本类似，唯一的区别是它只接受对象作为键名（ null 除外），不接受其他类型的值作为键名，而且键名所指向的对象，不计入垃圾回收机制。</li><li>WeakMap 最大的好处是可以避免内存泄漏。一个仅被 WeakMap 作为 key 而引用的对象，会被垃圾回收器回收掉。</li><li>WeakMap 拥有和 Map 类似的 set(key, value) 、 get(key)、has(key)、 delete(key) 和 clear() 方法, 没有任何与迭代有关的属性和方法。</li></ul><h2 id="21、重排和重绘"><a href="#21、重排和重绘" class="headerlink" title="21、重排和重绘"></a>21、重排和重绘</h2><ul><li>部分渲染树（或者整个渲染树）需要重新分析并且节点尺寸需要重新计算。这被称为重排。注意这里至少会有一次重排-初始化页面布局。</li><li>由于节点的几何属性发生改变或者由于样式发生改变，例如改变元素背景色时，屏幕上的部分内容需要更新。这样的更新被称为重绘。</li></ul><h2 id="22、什么情况会触发重排和重绘？"><a href="#22、什么情况会触发重排和重绘？" class="headerlink" title="22、什么情况会触发重排和重绘？"></a>22、什么情况会触发重排和重绘？</h2><ul><li>添加、删除、更新 DOM 节点</li><li>通过 display: none 隐藏一个 DOM 节点-触发重排和重绘</li><li>通过 visibility: hidden 隐藏一个 DOM 节点-只触发重绘，因为没有几何变化</li><li>移动或者给页面中的 DOM 节点添加动画</li><li>添加一个样式表，调整样式属性</li><li>用户行为，例如调整窗口大小，改变字号，或者滚动。</li></ul><h2 id="20、浏览器缓存"><a href="#20、浏览器缓存" class="headerlink" title="20、浏览器缓存"></a>20、浏览器缓存</h2><p>浏览器缓存分为强缓存和协商缓存。当客户端请求某个资源时，获取缓存的流程如下：</p><ul><li>先根据这个资源的一些 http header 判断它是否命中强缓存，如果命中，则直接从本地获取缓存资源，不会发请求到服务器；</li><li>当强缓存没有命中时，客户端会发送请求到服务器，服务器通过另一些 request header验证这个资源是否命中协商缓存，称为 http再验证，如果命中，服务器将请求返回，但不返回资源，而是告诉客户端直接从缓存中获取，客户端收到返回后就会从缓存中获取资源；</li><li>强缓存和协商缓存共同之处在于，如果命中缓存，服务器都不会返回资源；</li><li>区别是，强缓存不对发送请求到服务器，但协商缓存会。</li><li>当协商缓存也没命中时，服务器就会将资源发送回客户端。</li><li>当 <code>ctrl+f5</code> 强制刷新网页时，直接从服务器加载，跳过强缓存和协商缓存；</li><li>当 f5 刷新网页时，跳过强缓存，但是会检查协商缓存；</li></ul><p><strong>强缓存</strong></p><ul><li>Expires（该字段是 http1.0 时的规范，值为一个绝对时间的 GMT 格式的时间字符串，代表缓存资源的过期时间）</li><li>Cache-Control:max-age（该字段是 http1.1 的规范，强缓存利用其 max-age 值来判断缓存资源的最大生命周期，它的值单位为秒）</li></ul><p><strong>协商缓存</strong></p><ul><li>Last-Modified（值为资源最后更新时间，随服务器response返回）</li><li>If-Modified-Since（通过比较两个时间来判断资源在两次请求期间是否有过修改，如果没有修改，则命中协商缓存）</li><li>ETag（表示资源内容的唯一标识，随服务器response返回）</li><li>If-None-Match（服务器通过比较请求头部的If-None-Match与当前资源的ETag是否一致来判断资源是否在两次请求之间有过修改，如果没有修改，则命中协商缓存）</li></ul><p>END</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1、使用css实现一个持续的动画效果&quot;&gt;&lt;a href=&quot;#1、使用css实现一个持续的动画效果&quot; class=&quot;headerlink&quot; title=&quot;1、使用css实现一个持续的动画效果&quot;&gt;&lt;/a&gt;1、使用css实现一个持续的动画效果&lt;/h2&gt;&lt;pre&gt;&lt;cod
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>小程序开发解答！如何禁止页面滑动</title>
    <link href="http://yoursite.com/2018/03/26/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>http://yoursite.com/2018/03/26/小程序知识点/</id>
    <published>2018-03-26T02:54:44.256Z</published>
    <updated>2018-01-31T03:43:14.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-方法一：把父级标签修改为scroll-view"><a href="#1-方法一：把父级标签修改为scroll-view" class="headerlink" title="1.方法一：把父级标签修改为scroll-view"></a>1.方法一：把父级标签修改为scroll-view</h3><p><strong> wxml </strong></p><pre><code><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">scroll</span>-<span class="built_in">view</span>&#123;</span><br><span class="line">   &lt;<span class="keyword">scroll</span>-<span class="built_in">view</span>&gt;输入内容&lt;/<span class="keyword">scroll</span>-<span class="built_in">view</span>&gt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></code></pre><p><strong> wxss </strong></p><pre><code><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">scroll-view</span>&#123;</span><br><span class="line">   <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">   <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></code></pre><h3 id="2-设置page-json文件的disableScroll为属性true。"><a href="#2-设置page-json文件的disableScroll为属性true。" class="headerlink" title="2.设置page.json文件的disableScroll为属性true。"></a>2.设置page.json文件的disableScroll为属性true。</h3><p><strong> page.json </strong></p><pre><code><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"navigationBarTitleText"</span>: <span class="string">"标题"</span>,</span><br><span class="line"> <span class="string">"disableScroll"</span>: <span class="literal">true</span></span><br></pre></td></tr></table></figure></code></pre><p>以上就是小程序开发解答！如何禁止页面滑动的全部内容，希望这篇技术文档对大家的学习有所帮助</p><p><a href="Joeycpp.github.io" title="我的博客">Joeycpp.github.io</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-方法一：把父级标签修改为scroll-view&quot;&gt;&lt;a href=&quot;#1-方法一：把父级标签修改为scroll-view&quot; class=&quot;headerlink&quot; title=&quot;1.方法一：把父级标签修改为scroll-view&quot;&gt;&lt;/a&gt;1.方法一：把父级标签
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Sublime-Text3的使用（插件和快捷键）</title>
    <link href="http://yoursite.com/2018/03/26/sublime-text3%E7%9A%84%E4%BD%BF%E7%94%A8%EF%BC%88%E6%8F%92%E4%BB%B6%E5%92%8C%E5%BF%AB%E6%8D%B7%E9%94%AE%EF%BC%89/"/>
    <id>http://yoursite.com/2018/03/26/sublime-text3的使用（插件和快捷键）/</id>
    <published>2018-03-26T02:54:44.253Z</published>
    <updated>2017-09-15T05:31:44.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、安装及安装emmet插件"><a href="#一、安装及安装emmet插件" class="headerlink" title="一、安装及安装emmet插件"></a>一、安装及安装emmet插件</h2><p>首先,去sublime官网下载软件：[<a href="http://www.sublimetext.com/" target="_blank" rel="noopener">http://www.sublimetext.com/</a> ]，</p><p>软件很小，我用的是最新版的text3，大家可以用目前稳定版text2。打开它的官网，我们就可以看到几个动画，演示sublime的强大功能。</p><p>其次，软件安装好了之后，我们来安装一个插件，推荐使用package control组件来安装插件，很方便。</p><p>安装方法如下：</p><p>按快捷键ctrl+~ 调出命名控制行：然后如果是text2输入如下命令：<br><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import urllib2,<span class="built_in">os</span>,hashlib; h = <span class="string">'7183a2d3e96f11eeadd761d777e62404'</span> + <span class="string">'e330c659d4bb41d3bdf022e94cab3cd0'</span>; pf = <span class="string">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); <span class="built_in">os</span>.makedirs( ipp ) <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">os</span>.<span class="built_in">path</span>.exists(ipp) <span class="keyword">else</span> None; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler()) ); by = urllib2.urlopen( <span class="string">'http://sublime.wbond.net/'</span> + pf.replace(<span class="string">' '</span>, <span class="string">'%20'</span>)).<span class="built_in">read</span>(); dh = hashlib.sha256(by).hexdigest(); <span class="built_in">open</span>( <span class="built_in">os</span>.<span class="built_in">path</span>.join( ipp, pf), <span class="string">'wb'</span> ).<span class="built_in">write</span>(by) <span class="keyword">if</span> dh == h <span class="keyword">else</span> None; <span class="built_in">print</span>(<span class="string">'Error validating download (got %s instead of %s), please try manual install'</span> % (dh, h) <span class="keyword">if</span> dh != h <span class="keyword">else</span> <span class="string">'Please restart Sublime Text to finish installation'</span>)</span><br></pre></td></tr></table></figure></p><p>如果是text3输入如下命令：<br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import urllib.request,os,hashlib; h = <span class="string">'7183a2d3e96f11eeadd761d777e62404'</span> + <span class="string">'e330c659d4bb41d3bdf022e94cab3cd0'</span>; pf = <span class="string">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); <span class="keyword">by</span> = urllib.request.urlopen( <span class="string">'http://sublime.wbond.net/'</span> + pf.<span class="built_in">replace</span>(<span class="string">' '</span>, <span class="string">'%20'</span>)).<span class="built_in">read</span>(); dh = hashlib.sha256(<span class="keyword">by</span>).hexdigest(); print(<span class="string">'Error validating download (got %s instead of %s), please try manual install'</span> % (dh, h)) <span class="keyword">if</span> dh != h <span class="keyword">else</span> <span class="built_in">open</span>(os.path.join( ipp, pf), <span class="string">'wb'</span> ).<span class="built_in">write</span>(<span class="keyword">by</span>)</span><br></pre></td></tr></table></figure></p><p>具体安装您也可以查看：[ <a href="https://sublime.wbond.net/installation#st3" target="_blank" rel="noopener">https://sublime.wbond.net/installation#st3</a> ]</p><p>最后，有了package control，你就可以安装您想要的插件了!很简单，sublime下面有很多插件，一般编辑器有的，sublime都会以插件的形式出现，下面我们最先介绍Emmet。</p><p>打开package control 输入install package 然后找到emmet，点击安装，重启sublime就可以了，具体请看：<a href="https://github.com/sergeche/emmet-sublime#readme" target="_blank" rel="noopener">https://github.com/sergeche/emmet-sublime#readme</a></p><h2 id="二-sublime常用插件："><a href="#二-sublime常用插件：" class="headerlink" title="二. sublime常用插件："></a>二. sublime常用插件：</h2><p><strong>1 . Emmet（原名 Zen Coding）</strong></p><p>一种快速编写html/css的方法</p><p>不得不用的一款前端开发方面的插件，Write less , show more.安装后可直接使用，Tab键触发，Alt+Shift+W是个代码机器。</p><p><strong>2. Alignment</strong></p><p>代码对齐，如写几个变量，选中这几行，Ctrl+Alt+A，哇，齐了。</p><p><strong>3. AutoPrefixr</strong></p><p>写 CSS可自动添加 -webkit 等私有词缀，Ctrl+Alt+X触发。</p><p> <strong>4 . html5</strong></p><p>支持hmtl5规范的插件包<br>使用方法：新建html文档&gt;输入html5&gt;敲击Tab键&gt;自动补全html5规范文档</p><p><strong>5. SideBarEnhancements</strong></p><p>侧栏右键功能增强，非常实用</p><p><strong>6.GBK to UTF8</strong></p><p>将文件编码从GBK转黄成UTF8，菜单 – File里面找</p><p><strong>7.jQuery</strong></p><p>支持JQuery规范的插件包</p><p><strong>8.WordPress</strong></p><p>集成一些WordPress的函数，对于像我这种经常要写WP模版和插件的人特别有用</p><p><strong>9.PHPTidy</strong></p><p>整理排版PHP代码</p><p><strong>10.YUI Compressor</strong></p><p>压缩JS和CSS文件</p><p><strong>11.Ctags插件</strong><br>有童鞋抱怨Sublime Text不能支持函数的跳转（比如像Eclipse那样，按住Control点击该方法或者对象，即可跳转到定义的地方； Alt+←即可回到原处）。其实Sublime Text也可以借助插件实现之（当然，有些情况下:Can not find defination）毕竟这个也是借助正则来匹配完成的。因此这个也就要求代码很规范。这个插件相对来讲会有些麻烦，具体的可以参见:Sublime Text ctags 的配置.</p><p><strong>12.Doc​Blockr</strong></p><p>注释插件，生成幽美的注释。标准的注释，包括函数名、参数、返回值等，并以多行显示，省去手动编写。</p><p><strong>13 . SublimeLinter</strong></p><p>一个支持lint语法的插件，可以高亮linter认为有错误的代码行，也支持高亮一些特别的注释，比如“TODO”，这样就可以被快速定位。（IntelliJ IDEA的TODO功能很赞，这个插件虽然比不上，但是也够用了吧）</p><p><strong>14.BracketHighlighter</strong></p><p>类似于代码匹配，可以匹配括号，引号等符号内的范围。</p><p><strong>15.ColorPicker</strong><br>通常，如果你想使用一个颜色选择器则可能打开 Photoshop 或 GIMP。而在 Sublime Text 中，你可以使用内置的颜色选择器。安装完成后，只要按下Ctrl / Cmd + Shift + C 快捷键。</p><p><strong>16.SublimeREPL</strong><br>这可能是对程序员很有用的插件。SublimeREPL 允许你在 Sublime Text 中运行各种语言（NodeJS ， Python，Ruby， Scala 和 Haskell 等等）。</p><p><strong>17.Sublime Terminal</strong><br>这个插件可以让你在Sublime中直接使用终端打开你的项目文件夹，并支持使用快捷键。</p><p><strong>18.MarkDown Editing</strong><br>SublimeText不仅仅是能够查看和编辑 Markdown 文件，但它会视它们为格式很糟糕的纯文本。这个插件通过适当的颜色高亮和其它功能来更好地完成这些任务。关于如何在SublimeText下高效些东西可参见文章：sublime text 2(3)下的Markdown写作 抑或是前段时间写下的追寻高效工作的一路折腾㈡</p><p><strong>19.SideBarFolders</strong><br>打开的文件夹都太多了? 来用这个来管理文件夹，世界原来也可以这么美好。</p><p><strong>20.SublimeLinter插件</strong><br>SublimeLinter 是前端编码利器——Sublime Text 的一款插件，用于高亮提示用户编写的代码中存在的不规范和错误的写法，支持 JavaScript、CSS、HTML、Java、PHP、Python、Ruby 等十多种开发语言。这篇文章介绍如何在 Windows 中配置 SublimeLinter 进行 JS &amp; CSS 校验。<br>比如写例如像lua这样的弱语言脚本代码，有这个可以规避掉很多不该有的低级错误吧？当然这也需要你SublimeLinter安装完毕之后再安装一个SublimeLinter-lua即可。具体的使用可以参见：借助 SublimeLinter 编写高质量的 JavaScript &amp; CSS 代码</p><p><strong>21.SideBarEnhancements插件</strong><br>SideBarEnhancements是一款很实用的右键菜单增强插件；在安装该插件前，在Sublime Text左侧FOLDERS栏中点击右键，只有寥寥几个简单的功能；安装了就相当于给其丰了大胸一般。 更强大的是，该插件还能让我们自定义快捷键呼出某个浏览器以预览页面！这样就不用到项目目录下寻找和拖动到特定浏览器中预览了。<br>安装此插件后，点击菜单栏的preferences-&gt;package setting-&gt;side bar-&gt;Key Building-User，键入以下代码：<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[   </span><br><span class="line">    &#123; <span class="attr">"keys"</span>: [<span class="string">"ctrl+shift+c"</span>], <span class="attr">"command"</span>: <span class="string">"copy_path"</span> &#125;,</span><br><span class="line">    //chrome</span><br><span class="line">    &#123; <span class="attr">"keys"</span>: [<span class="string">"f2"</span>], <span class="attr">"command"</span>: <span class="string">"side_bar_files_open_with"</span>,</span><br><span class="line">            <span class="attr">"args"</span>: &#123;</span><br><span class="line">                <span class="attr">"paths"</span>: [],</span><br><span class="line">                <span class="attr">"application"</span>: <span class="string">"C:\\Users\\jeffj\\AppData\\Local\\Google\\Chrome\\Application\\chrome.exe"</span>,</span><br><span class="line">                <span class="attr">"extensions"</span>:<span class="string">".*"</span></span><br><span class="line">            &#125;</span><br><span class="line">     &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p><p><strong>22. HTML-CSS-JS Prettify</strong><br>一款集成了格式化（美化）html、css、js三种文件类型的插件，即便html,js写在PHP文件之内。插件依赖于nodejs，因此需要事先安装nodejs，然后才可以正常运行。插件安装完成后，快捷键ctrl+shift+H完成当前文件的美化操作。插件对html、css文件的美化不是非常满意，但还可以，后面将说明如何修改css美化脚本。本人用起来超级爽的，鉴于篇幅，就不赘述，可以参见这篇介绍。</p><p><strong>23. CSScomb CSS属性排序:</strong><br>有时候看看自己写的CSS文件，会不会觉得属性很乱查找不易维护难？CSScomb可以按照一定的CSS属性排序规则，将杂乱无章的CSS属性进行重新排序。选中要排序的CSS代码，按Ctrl+Shift+C，即可对CSS属性重新排序了，代码从此简洁有序易维护，如果不款选代码则插件将排序文件中所有的CSS属性。当然，可以自己自定义CSS属性排序规则，打开插件目录里的CSScomb.sublime-settings文件，更改里面的CSS属性顺序就行了。因为这个插件使用PHP写的，要使他工作需要在环境变量中添加PHP的路径，具体请看github上的说明。</p><p><strong>24. SublimeTmpl 快速生成文件模板</strong><br>一直都很奇怪为什么sublime text 3没有新建文件模板的功能，像html头部的DTD声明每次都要复制粘贴。用SublimeTmpl这款插件终于可以解脱了，SublimeTmpl能新建html、css、javascript、php、python、ruby六种类型的文件模板，所有的文件模板都在插件目录的templates文件夹里，可以自定义编辑文件模板。<br>SublimeTmpl默认的快捷键:  </p><blockquote><p>ctrl+alt+h html<br>ctrl+alt+j javascript<br>ctrl+alt+c css<br>ctrl+alt+p php<br>ctrl+alt+r ruby<br>ctrl+alt+shift+p python</p></blockquote><p><strong>25.Javascript-API-Completions:</strong><br>支持Javascript、JQuery、Twitter Bootstrap框架、HTML5标签属性提示的插件，是少数支持sublime text 3的后缀提示的插件，HTML5标签提示sublime text3自带，不过JQuery提示还是很有用处的，也可设置要提示的语言。</p><p><strong>26.SFTP：快速编辑远程服务器文件</strong><br>在Win下用Xftp 和 WinScp，被这种需要切换点击or F5刷新的手动操作蛋疼到无语；故此一遇见这SFTP，顿觉这世界都美好了许多。当然Sublime下面也有些其他同步插件，比如FtpSnyc，但是配置起来的错误提示一点都不人性化，就毫不留情的舍弃了。Sublime下有SFTP，只要Ctrl+S即可同步本地到服务器，妥妥的爽歪歪有么有？如何配置，请参见在 Sublime Text中使用 SFTP 插件快速编辑远程服务器文件;如欲使用FtpSync可参见Sublime使用及FtpSync远程同步；大道至简，因简而悦；开心垒码，值得折腾。</p><p><strong>27.WakaTime – 记录你的Code时间;</strong><br>WakaTime可以做到精确地统计到你花在某个项目上的时间;WakaTime针对不同的IDE，拥有不同的插件，在Sublime上安装着插件，就能统计到我使用Sublime进行的所有项目的行为。可以高效管理和知晓自己code时间；并且，统计完善, 适合发朋友圈装逼（如果你喜欢的话）~</p><p><strong>28.advancedNewFile： 快速创建文件</strong><br>当我们在 Sublime Text 编辑器里我们可以通过快捷键command+n(win: ctrl+n),来新建一个文件，然后command+s(Win:ctrl+s)进行弹出保存框，填写文件名进行保存。还是老问题，麻烦！！我们接下来就通过安装advancedNewFile插件来提升我们在Sublime Text编辑器下的创建文件速度。</p><p>关乎其使用，安装完成之后，运用快捷键<code>command+alt+n(win: ctrl+alt+n)</code><br>，Sublime Text底部会弹出输入框；我们只需在这个输入框里输入我们需要新建的文件名回车即可（我们甚至可以带路径,譬如:src/components/perfect.vue;这就会在当前项目目录下，建立该文件；需要注意的是这路径前面不可加 ‘/‘, 这会使得建立的路径成为用户目录，而非改项目目录）。默认情况下文件会存储在当前目录，如果当前没有目录，会存储在用户的家目录。</p><p>剩下些许其他的可以按需安装的插件，比如：</p><p>ConvertToUTF8 支持 GBK, BIG5, EUC-KR, EUC-JP, Shift_JIS 等编码的插件<br>Bracket Highlighter 用于匹配括号，引号和html标签。对于很长的代码很有用。安装好之后，不需要设置插件会自动生效<br>DocBlockr 可以自动生成PHPDoc风格的注释。它支持的语言有Javascript, PHP, ActionScript, CoffeeScript, Java, Objective C, C, C++</p><p><font color="purple">Emmet(Zen Coding)</font>快速生成HTML代码段的插件，强大到无与伦比:可以超快速编写HTML/CSS/JS，当然这个插件还支持多种编译环境，如常见的：Eclipse/Aptana、Coda、Notepad++、Adobe Dreamweaver、TextMate等，web开发必备！！！。<br>jsFormat 格式化js代码，懂者自懂；强迫症Coder必备！默认快捷键Ctrl+Alt+F。<br>phpFormat 格式化php代码，懂者自懂；强迫症Coder必备！</p><p><strong>CSS Compact Expand CSS属性展开收缩:</strong>写CSS的盆友，喜欢将其写多行还是一行(个人喜欢将其格式化为多行)？如果阅读别人的代码不符合自己的习惯，可以用CSS Compact Expand这个插件将CSS格式化一下，按 Ctrl+Alt+[ 收缩CSS代码为一行显示，按 Ctrl+Alt+] 展开CSS代码为多行显示；强迫症Coder必备！。</p><p><strong>Autoprefixer插件</strong>：这是一款CSS3私有前缀自动补全插件；该插件使用CanIUse资料库（当然，SublimeText自然也有<font color="purple">CanIUse</font>这个插件咯），能精准判断哪些属性需要什么前缀，与CssComb插件一样，该插件也需要系统已安装Node.js环境；使用方法：在输入CSS3属性后（冒号前）按Tab键即可。</p><p><strong>YUI Compressor</strong>：压缩JS和CSS文件，按F7键后，若压缩当前文件（demo.js），则压缩后的文件（demo.min.js）保存在该文件的同级目录，需要安装java的JDK。使用方法：YUI Compressor</p><p><strong>ClickableURLs</strong>：可点击的URL<br>使用小插件ClickableURLs可以让文件中的URL能够点击。</p><p><strong>Vue Syntax Highlight:</strong> <code>Vue(*.vue)</code>高亮插件；于前端而言，使用Vue框架开发，是一个很酷爽的存在，那么此插件也就很有必要拥有；同时Jade, SASS等插件也是很有拥有的必要，谁用谁知道(说到用vue, 这vue-cli就蛮有使用的必要了( Webpack, Eslint, Test等都配置完善，十分贴心); 而写Js代码，于稍大项目 Eslint 就很有使用必要，而 sublime 在针对使用 Eslint 的 *.vue文件，目测还没有很好格式化插件，坐等诞生</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、安装及安装emmet插件&quot;&gt;&lt;a href=&quot;#一、安装及安装emmet插件&quot; class=&quot;headerlink&quot; title=&quot;一、安装及安装emmet插件&quot;&gt;&lt;/a&gt;一、安装及安装emmet插件&lt;/h2&gt;&lt;p&gt;首先,去sublime官网下载软件：[&lt;a 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>你对 Meta 标签了解多少？</title>
    <link href="http://yoursite.com/2018/03/26/Meta%E6%A0%87%E7%AD%BE/"/>
    <id>http://yoursite.com/2018/03/26/Meta标签/</id>
    <published>2018-03-26T02:54:44.250Z</published>
    <updated>2017-11-17T08:45:06.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>小伙伴，在我们日常写网页的时候有没有注意过<strong>Meta</strong> 标签，你对它了解多少呢？<strong>Meta</strong>标签是HTML语言head区的一个辅助性标签，它位于HTML文档头部的head标记和title标记之间，它提供用户不可见的信息。它可用于浏览器（如何显示内容或重新加载页面），搜索引擎（关键词），或其他web服务。</p></blockquote><p>今天给大家分享一下关于Meta 标签的常见功能分别由<strong>移动端</strong>和<strong>PC 端</strong> 的：</p><p><a href="http://www.aliyue.net/wp-content/uploads/2016/06/meta.jpg" target="_blank" rel="noopener"><img src="http://upload-images.jianshu.io/upload_images/4889822-41eca1e3966681d4.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="meta"></a></p><h3 id="1、申请文档使用的字符编码"><a href="#1、申请文档使用的字符编码" class="headerlink" title="1、申请文档使用的字符编码"></a>1、申请文档使用的字符编码</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">charset</span>=<span class="string">'utf-8'</span>&gt;</span><br></pre></td></tr></table></figure><p>或<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attribute">content</span>=<span class="string">"text/html; charset=utf-8"</span> /&gt;</span><br></pre></td></tr></table></figure></p><p>该 meta 标签定义了 HTML 页面所使用的字符集为 utf-8 ，就是万国码。它可以在同一页面显示中文简体、繁体及其它语言（如日文，韩文）等。当然，你也可以使用gb2312（简体中文），big5（繁体中文）等等其他字符集。</p><p><strong>而目前我们一般推荐使用第一种写法，也是HTML5使用的写法。</strong></p><h3 id="2、声明使用的浏览器及版本"><a href="#2、声明使用的浏览器及版本" class="headerlink" title="2、声明使用的浏览器及版本"></a>2、声明使用的浏览器及版本</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attribute">content</span>=<span class="string">"IE=edge,chrome=1"</span> /&gt;</span><br></pre></td></tr></table></figure><p>当指定的content值为IE=edge,chrome=1时，优先使用 IE 最新版本和 Chrome。假定客户端安装了Google Chrome Frame，则在IE中使用chrome的渲染引擎来渲染页面，否则，将会使用客户端IE最高的标准模式对页面进行渲染。</p><p>还有以下几种设置方式：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=6"</span> /&gt;</span><span class="comment">&lt;!-- 使用IE6 --&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=EmulateIE7"</span> /&gt;</span><span class="comment">&lt;!-- 使用IE7 --&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=8"</span> /&gt;</span><span class="comment">&lt;!-- 使用IE8 --&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span> /&gt;</span> <span class="comment">&lt;!--指示IE以目前可用的最高模式显示内容--&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="3、SEO优化相关"><a href="#3、SEO优化相关" class="headerlink" title="3、SEO优化相关"></a>3、SEO优化相关</h3><p>页面描述，每个网页都应有一个不超过 150 个字符且能准确反映网页内容的描述标签。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">name</span>=<span class="string">"description"</span> <span class="attribute">content</span>=<span class="string">"不超过150个字符"</span> /&gt;</span><br></pre></td></tr></table></figure></p><p>页面关键词，每个网页应具有描述该网页内容的一组唯一的关键字。</p><p>使用人们可能会搜索，并准确描述网页上所提供信息的描述性和代表性关键字及短语。<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">name</span>=<span class="string">"keywords"</span> <span class="attribute">content</span>=<span class="string">"html5, css3, 关键字"</span>/&gt;</span><br></pre></td></tr></table></figure></p><p>定义网页作者，非必要<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">name</span>=<span class="string">"author"</span> <span class="attribute">content</span>=<span class="string">"月光光"</span> /&gt;</span><br></pre></td></tr></table></figure></p><h3 id="4、页面重定向和刷新：content内的数字代表时间（秒），既多少时间后刷新。如果加url-则会重定向到指定网页。"><a href="#4、页面重定向和刷新：content内的数字代表时间（秒），既多少时间后刷新。如果加url-则会重定向到指定网页。" class="headerlink" title="4、页面重定向和刷新：content内的数字代表时间（秒），既多少时间后刷新。如果加url,则会重定向到指定网页。"></a>4、页面重定向和刷新：content内的数字代表时间（秒），既多少时间后刷新。如果加url,则会重定向到指定网页。</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">http-equiv</span>=<span class="string">"Refresh"</span>  <span class="attribute">contect</span>=<span class="string">"5;url=http://www.helloweba.com"</span> /&gt;</span><br></pre></td></tr></table></figure><p>上述代码表示停留5秒钟后自动刷新跳转到URL网址<a href="http://www.helloweba.com。" target="_blank" rel="noopener">http://www.helloweba.com。</a></p><h3 id="5、Expires网页过期时间"><a href="#5、Expires网页过期时间" class="headerlink" title="5、Expires网页过期时间"></a>5、Expires网页过期时间</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">http-equiv</span>=<span class="string">"Expires"</span> <span class="attribute">contect</span>=<span class="string">"Mon,12 May 2016 00:20:00 GMT"</span> /&gt;</span><br></pre></td></tr></table></figure><p>设定网页的到期时间，一旦过期则必须到服务器上重新调用，需要注意的是必须使用GMT时间格式，或直接设为0(不缓存)。</p><h3 id="6、Pragma禁止本地缓存"><a href="#6、Pragma禁止本地缓存" class="headerlink" title="6、Pragma禁止本地缓存"></a>6、Pragma禁止本地缓存</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">http-equiv</span>=<span class="string">"Pragma"</span> <span class="attribute">contect</span>=<span class="string">"no-cache"</span> /&gt;</span><br></pre></td></tr></table></figure><p>设定网页不保存在缓存中，每次访问都刷新页面。这样设定，访问者将无法脱机浏览。</p><h3 id="7、viewport移动设备屏幕可视区域"><a href="#7、viewport移动设备屏幕可视区域" class="headerlink" title="7、viewport移动设备屏幕可视区域"></a>7、viewport移动设备屏幕可视区域</h3><p>由于移动设备屏幕宽度不同于传统 web，因此我们需要改变 viewport 值。</p><ul><li><p>大部分4.7-5寸设备的viewport宽设为360px；5.5寸设备设为400px；iphone6设为375px；ipone6 plus设为414px。</p></li><li><p>width – viewport 的宽度 （范围从 200 到 10,000，默认为 980 像素）</p></li><li>height – viewport 的高度 （范围从 223 到 10,000 ）</li><li>initial-scale – 初始的缩放比例 （范围从 &gt; 0 到 10）</li><li>minimum-scale – 允许用户缩放到的最小比例</li><li>maximum-scale – 允许用户缩放到的最大比例</li><li>user-scalable – 用户是否可以手动缩放 (no，yes)<figure class="highlight nix"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attr">name="viewport"</span> <span class="attr">content="width=device-width,</span> <span class="attr">initial-scale=1.0,</span> <span class="attr">maximum-scale=1.0,</span> <span class="attr">user-scalable=no"</span> /&gt;</span><br></pre></td></tr></table></figure></li></ul><p>强制让文档与设备的宽度保持 1:1 ；</p><p>文档最大的宽度比列是1.0（ initial-scale 初始刻度值和 maximum-scale 最大刻度值）；</p><p>user-scalable 定义用户是否可以手动缩放（ no 为不缩放），使页面固定设备上面的大小；</p><p>注意：实际测试中发现，有些安卓系统自带的浏览器并不支持这一条规则，能够对页面进行放大，一旦放大响应的 box 也随之放大，导致页面出现错乱问题，解决方法：定义页面的最小宽度。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123; </span><br><span class="line">    <span class="attribute">min-width</span>: <span class="number">320px</span>; </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></p><p>注意，很多人使用initial-scale=1到非响应式网站上，这会让网站以100%宽度渲染，用户需要手动移动页面或者缩放。如果和initial-scale=1同时使用user-scalable=no或maximum-scale=1，则用户将不能放大/缩小网页来看到全部的内容。</p><p>对于移动设备上的meta还有以下一些设置。</p><h3 id="8、WebApp全屏模式：伪装app，离线应用。"><a href="#8、WebApp全屏模式：伪装app，离线应用。" class="headerlink" title="8、WebApp全屏模式：伪装app，离线应用。"></a>8、WebApp全屏模式：伪装app，离线应用。</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">name</span>=<span class="string">"apple-mobile-web-app-capable"</span> <span class="attribute">content</span>=<span class="string">"yes"</span> /&gt;</span><br></pre></td></tr></table></figure><h3 id="9、隐藏状态栏-设置状态栏颜色：只有在开启WebApp全屏模式时才生效。"><a href="#9、隐藏状态栏-设置状态栏颜色：只有在开启WebApp全屏模式时才生效。" class="headerlink" title="9、隐藏状态栏/设置状态栏颜色：只有在开启WebApp全屏模式时才生效。"></a>9、隐藏状态栏/设置状态栏颜色：只有在开启WebApp全屏模式时才生效。</h3><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=<span class="string">"apple-mobile-web-app-status-bar-style"</span> content=<span class="string">"black-translucent"</span> /&gt; </span><br><span class="line">content的值为default | <span class="type">black</span> | <span class="type">black</span>-translucent</span><br></pre></td></tr></table></figure><h3 id="10、添加到主屏后的标题"><a href="#10、添加到主屏后的标题" class="headerlink" title="10、添加到主屏后的标题"></a>10、添加到主屏后的标题</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">name</span>=<span class="string">"apple-mobile-web-app-title"</span> <span class="attribute">content</span>=<span class="string">"标题"</span> /&gt;</span><br></pre></td></tr></table></figure><h3 id="11、忽略数字自动识别为电话号码"><a href="#11、忽略数字自动识别为电话号码" class="headerlink" title="11、忽略数字自动识别为电话号码"></a>11、忽略数字自动识别为电话号码</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">content</span>=<span class="string">"telephone=no"</span> <span class="attribute">name</span>=<span class="string">"format-detection"</span> /&gt;</span><br></pre></td></tr></table></figure><h3 id="12、忽略识别邮箱"><a href="#12、忽略识别邮箱" class="headerlink" title="12、忽略识别邮箱"></a>12、忽略识别邮箱</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">content</span>=<span class="string">"email=no"</span> <span class="attribute">name</span>=<span class="string">"format-detection"</span> /&gt;</span><br></pre></td></tr></table></figure><blockquote><p>今天就分享到这里，祝小伙伴们学习愉快！也谢谢大家的关注。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;小伙伴，在我们日常写网页的时候有没有注意过&lt;strong&gt;Meta&lt;/strong&gt; 标签，你对它了解多少呢？&lt;strong&gt;Meta&lt;/strong&gt;标签是HTML语言head区的一个辅助性标签，它位于HTML文档头部的head标记和title标
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JavaScript中必须要掌握的知识</title>
    <link href="http://yoursite.com/2018/03/26/js%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>http://yoursite.com/2018/03/26/js知识点/</id>
    <published>2018-03-26T02:54:44.248Z</published>
    <updated>2017-09-20T10:09:08.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-对json的理解"><a href="#1-对json的理解" class="headerlink" title="1.对json的理解"></a>1.对json的理解</h3><p>回答一：</p><ol><li>JSON对象：以“{”开始，以“}”结束，里面则是一系列的键（key）值（value）对，键和值用“:”分开，每对键值对之间用“,”分开。参考以下语法结构：{key1:value1,key2:value2,key3:value3…}其中键（key）是字符串，而值（value）可以是字符串，数值，true,false,null,对象或数组，也就是说某个键（key）的值（value）可以是一个数组，数组里面又是一些JSON对象，这种表示稍微复杂一些，但是参照这些理解可以很容易分辨出来。 </li><li>JSON数组：以”[”开始，”]”结束，如同程序语言一样，例如C#，Button[] btnArray,则BtnArray是一个Button类型的数组，里面就存放Button类型的对象，那么JSON数组也一样，里面存放的也是JSON对象.</li></ol><p>回答二：</p><ol><li>JSON 指的是 JavaScript 对象表示法（JavaScript Object Notation） </li><li>JSON 是轻量级的文本数据交换格式，并不是编程语言 </li><li>JSON 独立于语言存在 </li><li>JSON 具有自我描述性，更易理解 </li><li>JSON 可以将 JavaScript 对象中表示的一组数据转换为字符串，然后就可以在函数之间轻松地传递这个字符串，或者在异步应用程序中将字符串从 Web 客户机传递给服务器端程序。这个字符串看起来有点儿古怪，但是JavaScript很容易解释它，而且 JSON 可以表示比”名称 / 值对”更复杂的结构。例如，可以表示数组和复杂的对象，而不仅仅是键和值的简单列表</li></ol><p>回答三：</p><p>JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。</p><p>它是基于JavaScript的一个子集。数据格式简单, 易于读写, 占用带宽小.</p><p>json简单说就是javascript中的对象和数组，所以这两种结构就是对象和数组两种结构，通过这两种结构可以表示各种复杂的结构。</p><ul><li>对象：对象在js中表示为“{}”括起来的内容，数据结构为 {key：value,key：value,…}的键值对的结构，在面向对象的语言中，key为对象的属性，value为对应的属性值，所以很容易理解，取值方法为 对象.key 获取属性值，这个属性值的类型可以是 数字、字符串、数组、对象几种。 </li><li>数组：数组在js中是中括号“[]”括起来的内容，数据结构为 [“java”,”javascript”,”vb”,…]，取值方式和所有语言中一样，使用索引获取，字段值的类型可以是数字、字符串、数组、对象几种。<br>经过对象、数组2种结构就可以组合成复杂的数据结构了。</li></ul><h3 id="2-对闭包的理解"><a href="#2-对闭包的理解" class="headerlink" title="2.对闭包的理解"></a>2.对闭包的理解</h3><ol><li>使用闭包主要是为了设计私有的方法和变量。闭包的优点是可以避免全局变量的污染，缺点是闭包会常驻内存，会增大内存使用量，使用不当很容易造成内存泄露。</li><li>闭包有三个特性：<ul><li>a、函数嵌套函数 </li><li>b、函数内部可以引用外部的参数和变量 </li><li>c、参数和变量不会被垃圾回收机制回收</li></ul></li></ol><h3 id="3-对This对象的理解"><a href="#3-对This对象的理解" class="headerlink" title="3.对This对象的理解"></a>3.对This对象的理解</h3><h4 id="回答一："><a href="#回答一：" class="headerlink" title="回答一："></a>回答一：</h4><ol><li>js的this指向是不确定的，也就是说是可以动态改变的。call/apply 就是用于改变this指向的函数，这样设计可以让代码更加灵活，复用性更高 </li><li>this 一般情况下，都是指向函数的拥有者。 </li><li><p>在函数自执行里，this 指向的是 window 对象。 </p><p>扩展：关于this，还有一个地方比较让人模糊的是在dom事件里，通常有如下3种情况：</p><ul><li>使用标签属性注册事件，此时this指向的是window对象。 </li><li>对与a，要让this指向input，可以将this作为参数传递。 </li><li>使用addEventListener等注册事件。此时this也是指向 input。</li></ul></li></ol><p><a href="Joeycpp.github.io" title="我的博客">Joeycpp.github.io</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-对json的理解&quot;&gt;&lt;a href=&quot;#1-对json的理解&quot; class=&quot;headerlink&quot; title=&quot;1.对json的理解&quot;&gt;&lt;/a&gt;1.对json的理解&lt;/h3&gt;&lt;p&gt;回答一：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;JSON对象：以“{”开始，以“}”结束
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>踩坑之IOS中input光标跑偏问题的解决方法</title>
    <link href="http://yoursite.com/2018/03/26/input%E5%85%89%E6%A0%87%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/03/26/input光标问题/</id>
    <published>2018-03-26T02:54:44.245Z</published>
    <updated>2017-11-15T03:21:58.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-ios端兼容input光标高度处理"><a href="#1-ios端兼容input光标高度处理" class="headerlink" title="1.ios端兼容input光标高度处理"></a>1.ios端兼容input光标高度处理</h1><p>在最近的项目中遇到一个问题，input输入框光标，在安卓手机上显示没有问题，但是在苹果手机上<br>当点击输入的时候，光标的高度和父盒子的高度一样。造成的原因就是给父盒子添加了height和line-height<br>当点击输入的时候，光标的高度就自动和父盒子的高度一样了。（谷歌浏览器的设计原则，还有一种可能就<br>是当没有内容的时候光标的高度等于input的line-height的值，当有内容时，光标从input的顶端到文字<br>的底部）。<br>解决办法：去掉父盒子的高度height和行高line-height内容用padding撑开。</p><h1 id="2-ios不支持potision-fixed"><a href="#2-ios不支持potision-fixed" class="headerlink" title="2.ios不支持potision:fixed"></a>2.ios不支持potision:fixed</h1><p>把<code>position:fixed</code>改成<code>absolute</code><br>然后jQuery阻止移动端遮罩层后页面滚动<br>css代码：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.ovfHiden</span>&#123;<span class="attribute">overflow</span>: hidden;<span class="attribute">height</span>: <span class="number">100%</span>;&#125;</span><br></pre></td></tr></table></figure></p><p>jquery:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">".header_right"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">   $(<span class="string">'html,body'</span>).addClass(<span class="string">'ovfHiden'</span>); <span class="comment">//使网页不可滚动</span></span><br><span class="line">   $(<span class="string">".searchbox"</span>).show();</span><br><span class="line"> &#125;)</span><br><span class="line"> $(<span class="string">".yg-close"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">   $(<span class="string">'html,body'</span>).removeClass(<span class="string">'ovfHiden'</span>); <span class="comment">//使网页恢复可滚</span></span><br><span class="line">   $(<span class="string">".searchbox"</span>).hide();</span><br><span class="line"> &#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-ios端兼容input光标高度处理&quot;&gt;&lt;a href=&quot;#1-ios端兼容input光标高度处理&quot; class=&quot;headerlink&quot; title=&quot;1.ios端兼容input光标高度处理&quot;&gt;&lt;/a&gt;1.ios端兼容input光标高度处理&lt;/h1&gt;&lt;p&gt;在最
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>HTTP协议</title>
    <link href="http://yoursite.com/2018/03/26/http/"/>
    <id>http://yoursite.com/2018/03/26/http/</id>
    <published>2018-03-26T02:54:44.243Z</published>
    <updated>2017-11-15T03:17:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-HTTP简介"><a href="#1-HTTP简介" class="headerlink" title="1.HTTP简介"></a>1.HTTP简介</h2><p>HTTP协议是Hyper Text Transfer Protocol（超文本传输协议）的缩写,是用于从万维网（WWW:World Wide Web ）服务器传输超文本到本地浏览器的传送协议。</p><p>HTTP是一个基于TCP/IP通信协议来传递数据（HTML 文件, 图片文件, 查询结果等）。</p><p>HTTP是一个属于应用层的面向对象的协议，由于其简捷、快速的方式，适用于分布式超媒体信息系统。它于1990年提出，经过几年的使用与发展，得到不断地完善和扩展。目前在WWW中使用的是HTTP/1.0的第六版，HTTP/1.1的规范化工作正在进行之中，而且HTTP-NG(Next Generation of HTTP)的建议已经提出。</p><p>HTTP协议工作于客户端-服务端架构为上。浏览器作为HTTP客户端通过URL向HTTP服务端即WEB服务器发送所有请求。Web服务器根据接收到的请求后，向客户端发送响应信息。</p><h2 id="2-HTTP之状态码"><a href="#2-HTTP之状态码" class="headerlink" title="2.HTTP之状态码"></a>2.HTTP之状态码</h2><p>状态代码有三位数字组成，第一个数字定义了响应的类别，共分五种类别:</p><ul><li><p>1xx：指示信息–表示请求已接收，继续处理</p></li><li><p>2xx：成功–表示请求已被成功接收、理解、接受</p></li><li><p>3xx：重定向–要完成请求必须进行更进一步的操作</p></li><li><p>4xx：客户端错误–请求有语法错误或请求无法实现</p></li><li><p>5xx：服务器端错误–服务器未能实现合法的请求</p></li></ul><p><strong><em>常见状态码：</em></strong></p><ul><li>200 OK                              //客户端请求成功</li><li>400 Bad Request               //客户端请求有语法错误，不能被服务器所理解</li><li>401 Unauthorized              //请求未经授权，这个状态代码必须和WWW-Authenticate报头域一起使用 </li><li>403 Forbidden                 //服务器收到请求，但是拒绝提供服务</li><li>404 Not Found                 //请求资源不存在，eg：输入了错误的URL</li><li>500 Internal Server Error     //服务器发生不可预期的错误</li><li>503 Server Unavailable        //服务器当前不能处理客户端的请求，一段时间后可能恢复正常</li></ul><p><strong>HTTP状态码列表：</strong></p><table><thead><tr><th style="text-align:left">状态码</th><th style="text-align:right">状态码英文名称</th><th style="text-align:center">中文描述</th></tr></thead><tbody><tr><td style="text-align:left">100</td><td style="text-align:right">Continue</td><td style="text-align:center">继续。<a href="http://www.dreamdu.com/webbuild/client_vs_server/" target="_blank" rel="noopener">客户端</a>应继续其请求</td></tr><tr><td style="text-align:left">101</td><td style="text-align:right">Switching Protocols</td><td style="text-align:center">切换协议。服务器根据客户端的请求切换协议。只能切换到更高级的协议，例如，切换到HTTP的新版本协议</td></tr><tr><td style="text-align:left">200</td><td style="text-align:right">OK</td><td style="text-align:center">请求成功。一般用于GET与POST请求</td></tr><tr><td style="text-align:left">201</td><td style="text-align:right">Created</td><td style="text-align:center">已创建。成功请求并创建了新的资源</td></tr><tr><td style="text-align:left">202</td><td style="text-align:right">Accepted</td><td style="text-align:center">已接受。已经接受请求，但未处理完成</td></tr><tr><td style="text-align:left">203</td><td style="text-align:right">Non-Authoritative Information</td><td style="text-align:center">非授权信息。请求成功。但返回的meta信息不在原始的服务器，而是一个副本</td></tr><tr><td style="text-align:left">204</td><td style="text-align:right">No Content</td><td style="text-align:center">无内容。服务器成功处理，但未返回内容。在未更新网页的情况下，可确保浏览器继续显示当前文档</td></tr><tr><td style="text-align:left">205</td><td style="text-align:right">Reset Content</td><td style="text-align:center">重置内容。服务器处理成功，用户终端（例如：浏览器）应重置文档视图。可通过此返回码清除浏览器的表单域</td></tr><tr><td style="text-align:left">206</td><td style="text-align:right">Partial Content</td><td style="text-align:center">部分内容。服务器成功处理了部分GET请求</td></tr><tr><td style="text-align:left">300</td><td style="text-align:right">Multiple Choices</td><td style="text-align:center">多种选择。请求的资源可包括多个位置，相应可返回一个资源特征与地址的列表用于用户终端（例如：浏览器）选择</td></tr><tr><td style="text-align:left">301</td><td style="text-align:right">Moved Permanently</td><td style="text-align:center">永久移动。请求的资源已被永久的移动到新URI，返回信息会包括新的URI，浏览器会自动定向到新URI。今后任何新的请求都应使用新的URI代替</td></tr><tr><td style="text-align:left">302</td><td style="text-align:right">Found</td><td style="text-align:center">临时移动。与301类似。但资源只是临时被移动。客户端应继续使用原有URI</td></tr><tr><td style="text-align:left">303</td><td style="text-align:right">See Other</td><td style="text-align:center">查看其它地址。与301类似。使用GET和POST请求查看</td></tr><tr><td style="text-align:left">304</td><td style="text-align:right">Not Modified</td><td style="text-align:center">未修改。所请求的资源未修改，服务器返回此状态码时，不会返回任何资源。客户端通常会缓存访问过的资源，通过提供一个头信息指出客户端希望只返回在指定日期之后修改的资源</td></tr><tr><td style="text-align:left">305</td><td style="text-align:right">Use Proxy</td><td style="text-align:center">使用代理。所请求的资源必须通过代理访问</td></tr><tr><td style="text-align:left">306</td><td style="text-align:right">Unused</td><td style="text-align:center">已经被废弃的HTTP状态码</td></tr><tr><td style="text-align:left">307</td><td style="text-align:right">Temporary Redirect</td><td style="text-align:center">临时重定向。与302类似。使用GET请求重定向</td></tr><tr><td style="text-align:left">400</td><td style="text-align:right">Bad Request</td><td style="text-align:center">客户端请求的语法错误，服务器无法理解</td></tr><tr><td style="text-align:left">401</td><td style="text-align:right">Unauthorized</td><td style="text-align:center">请求要求用户的身份认证</td></tr><tr><td style="text-align:left">402</td><td style="text-align:right">Payment Required</td><td style="text-align:center">保留，将来使用</td></tr><tr><td style="text-align:left">403</td><td style="text-align:right">Forbidden</td><td style="text-align:center">服务器理解请求客户端的请求，但是拒绝执行此请求</td></tr><tr><td style="text-align:left">404</td><td style="text-align:right">Not Found</td><td style="text-align:center">服务器无法根据客户端的请求找到资源（网页）。通过此代码，网站设计人员可设置”您所请求的资源无法找到”的个性页面</td></tr><tr><td style="text-align:left">405</td><td style="text-align:right">Method Not Allowed</td><td style="text-align:center">客户端请求中的方法被禁止</td></tr><tr><td style="text-align:left">406</td><td style="text-align:right">Not Acceptable</td><td style="text-align:center">服务器无法根据客户端请求的内容特性完成请求</td></tr><tr><td style="text-align:left">407</td><td style="text-align:right">Proxy Authentication Required</td><td style="text-align:center">请求要求代理的身份认证，与401类似，但请求者应当使用代理进行授权</td></tr><tr><td style="text-align:left">408</td><td style="text-align:right">Request Time-out</td><td style="text-align:center">服务器等待客户端发送的请求时间过长，超时</td></tr><tr><td style="text-align:left">409</td><td style="text-align:right">Conflict</td><td style="text-align:center">服务器完成客户端的PUT请求是可能返回此代码，服务器处理请求时发生了冲突</td></tr><tr><td style="text-align:left">410</td><td style="text-align:right">Gone</td><td style="text-align:center">客户端请求的资源已经不存在。410不同于404，如果资源以前有现在被永久删除了可使用410代码，网站设计人员可通过301代码指定资源的新位置</td></tr><tr><td style="text-align:left">411</td><td style="text-align:right">Length Required</td><td style="text-align:center">服务器无法处理客户端发送的不带Content-Length的请求信息</td></tr><tr><td style="text-align:left">412</td><td style="text-align:right">Precondition Failed</td><td style="text-align:center">客户端请求信息的先决条件错误</td></tr><tr><td style="text-align:left">413</td><td style="text-align:right">Request Entity Too Large</td><td style="text-align:center">由于请求的实体过大，服务器无法处理，因此拒绝请求。为防止客户端的连续请求，服务器可能会关闭连接。如果只是服务器暂时无法处理，则会包含一个Retry-After的响应信息</td></tr><tr><td style="text-align:left">414</td><td style="text-align:right">Request-URI Too Large</td><td style="text-align:center">请求的URI过长（URI通常为网址），服务器无法处理</td></tr><tr><td style="text-align:left">415</td><td style="text-align:right">Unsupported Media Type</td><td style="text-align:center">服务器无法处理请求附带的媒体格式</td></tr><tr><td style="text-align:left">416</td><td style="text-align:right">Requested range not satisfiable</td><td style="text-align:center">客户端请求的范围无效</td></tr><tr><td style="text-align:left">500</td><td style="text-align:right">Internal Server Error</td><td style="text-align:center">服务器内部错误，无法完成请求</td></tr><tr><td style="text-align:left">501</td><td style="text-align:right">Not Implemented</td><td style="text-align:center">服务器不支持请求的功能，无法完成请求</td></tr><tr><td style="text-align:left">502</td><td style="text-align:right">Bad Gateway</td><td style="text-align:center">充当网关或代理的服务器，从远端服务器接收到了一个无效的请求</td></tr><tr><td style="text-align:left">503</td><td style="text-align:right">Service Unavailable</td><td style="text-align:center">由于超载或系统维护，服务器暂时的无法处理客户端的请求。延时的长度可包含在服务器的Retry-After头信息中</td></tr><tr><td style="text-align:left">504</td><td style="text-align:right">Gateway Time-out</td><td style="text-align:center">充当网关或代理的服务器，未及时从远端服务器获取请求</td></tr><tr><td style="text-align:left">505</td><td style="text-align:right">HTTP Version not supported</td><td style="text-align:center">服务器不支持请求的HTTP协议的版本，无法完成处理</td></tr></tbody></table><p>分类描述<br>1<strong>    信息，服务器收到请求，需要请求者继续执行操作<br>2</strong>    成功，操作被成功接收并处理<br>3<strong>    重定向，需要进一步的操作以完成请求<br>4</strong>    客户端错误，请求包含语法错误或无法完成请求<br>5**    服务器错误，服务器在处理请求的过程中发生了错误</p><h2 id="3-HTTP工作原理"><a href="#3-HTTP工作原理" class="headerlink" title="3.HTTP工作原理"></a>3.HTTP工作原理</h2><p>HTTP协议定义Web客户端如何从Web服务器请求Web页面，以及服务器如何把Web页面传送给客户端。HTTP协议采用了请求/响应模型。客户端向服务器发送一个请求报文，请求报文包含请求的方法、URL、协议版本、请求头部和请求数据。服务器以一个状态行作为响应，响应的内容包括协议的版本、成功或者错误代码、服务器信息、响应头部和响应数据。</p><p>以下是 HTTP 请求/响应的步骤：</p><p>1、客户端连接到Web服务器</p><p>一个HTTP客户端，通常是浏览器，与Web服务器的HTTP端口（默认为80）建立一个TCP套接字连接。例如，<a href="http://www.oakcms.cn。" target="_blank" rel="noopener">http://www.oakcms.cn。</a></p><p>2、发送HTTP请求</p><p>通过TCP套接字，客户端向Web服务器发送一个文本的请求报文，一个请求报文由请求行、请求头部、空行和请求数据4部分组成。</p><p>3、服务器接受请求并返回HTTP响应</p><p>Web服务器解析请求，定位请求资源。服务器将资源复本写到TCP套接字，由客户端读取。一个响应由状态行、响应头部、空行和响应数据4部分组成。</p><p>4、释放连接TCP连接</p><p>若connection 模式为close，则服务器主动关闭TCP连接，客户端被动关闭连接，释放TCP连接;若connection 模式为keepalive，则该连接会保持一段时间，在该时间内可以继续接收请求;</p><p>5、客户端浏览器解析HTML内容</p><p>客户端浏览器首先解析状态行，查看表明请求是否成功的状态代码。然后解析每一个响应头，响应头告知以下为若干字节的HTML文档和文档的字符集。客户端浏览器读取响应数据HTML，根据HTML的语法对其进行格式化，并在浏览器窗口中显示。</p><p>例如：在浏览器地址栏键入URL，按下回车之后会经历以下流程：</p><p>1、浏览器向 DNS 服务器请求解析该 URL 中的域名所对应的 IP 地址;</p><p>2、解析出 IP 地址后，根据该 IP 地址和默认端口 80，和服务器建立TCP连接;</p><p>3、浏览器发出读取文件(URL 中域名后面部分对应的文件)的HTTP 请求，该请求报文作为 TCP 三次握手的第三个报文的数据发送给服务器;</p><p>4、服务器对浏览器请求作出响应，并把对应的 html 文本发送给浏览器;</p><p>5、释放 TCP连接;</p><p>6、浏览器将该 html 文本并显示内容; 　　</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-HTTP简介&quot;&gt;&lt;a href=&quot;#1-HTTP简介&quot; class=&quot;headerlink&quot; title=&quot;1.HTTP简介&quot;&gt;&lt;/a&gt;1.HTTP简介&lt;/h2&gt;&lt;p&gt;HTTP协议是Hyper Text Transfer Protocol（超文本传输协议）的缩
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>使用Github Page和Hexo搭建个人博客</title>
    <link href="http://yoursite.com/2018/03/26/hexo%E6%95%99%E7%A8%8B/"/>
    <id>http://yoursite.com/2018/03/26/hexo教程/</id>
    <published>2018-03-26T02:54:44.240Z</published>
    <updated>2018-01-25T07:12:46.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-自行安装-nodejs和git"><a href="#1-自行安装-nodejs和git" class="headerlink" title="1.  自行安装 nodejs和git"></a>1.  自行安装 nodejs和git</h2><h2 id="2-自行注册github账号"><a href="#2-自行注册github账号" class="headerlink" title="2.  自行注册github账号"></a>2.  自行注册github账号</h2><h2 id="3-详细教程直通车-gt"><a href="#3-详细教程直通车-gt" class="headerlink" title="3.  详细教程直通车-&gt;"></a>3.  <a href="https://my.oschina.net/ryaneLee/blog/638440" target="_blank" rel="noopener">详细教程直通车-&gt;</a></h2><h2 id="4-主题安装直通车"><a href="#4-主题安装直通车" class="headerlink" title="4.  主题安装直通车"></a>4.  <a href="http://shaojunxiao.com/2016/06/04/Hexo-%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE/" target="_blank" rel="noopener">主题安装直通车</a></h2><h2 id="5-常用指令"><a href="#5-常用指令" class="headerlink" title="5. 常用指令"></a>5. 常用指令</h2><p>1.常用插件安装：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-generator-<span class="keyword">index</span> <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-<span class="keyword">archive</span> <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-<span class="keyword">category</span> <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-tag <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-<span class="keyword">server</span> <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-deployer-git <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-deployer-heroku <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-deployer-rsync <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-deployer-openshift <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-renderer-marked@<span class="number">0.2</span> <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-renderer-stylus@<span class="number">0.2</span> <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-feed@<span class="number">1</span> <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-sitemap@<span class="number">1</span> <span class="comment">--save</span></span><br></pre></td></tr></table></figure></p><p>2.主题配置完成以后，回到 根目录（即上一篇文章使用Hexo框架自由搭建博客中提到的 Blog 文件夹），按顺序执行命令就OK啦。<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install hexo-deployer-git --save</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span></span><br></pre></td></tr></table></figure></p><p>3.文章发布指令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo d -g</span></span><br></pre></td></tr></table></figure><p>4.设置自定义域名<br>  <img src="http://upload-images.jianshu.io/upload_images/4889822-b7a652eee79db01f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="解析域名"></p><p>解析完后，再回到 GitHub Pages 设置域名<br>如下图：<img src="http://upload-images.jianshu.io/upload_images/4889822-50a121846c21c583.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="设置"></p><p><img src="http://upload-images.jianshu.io/upload_images/4889822-44b50c735360d7ed.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="写域名保存"></p><p>最后就可以打开浏览器访问自己的域名就是博客的内容啦！！</p><h2 id="6-Hexo官网文档直通车"><a href="#6-Hexo官网文档直通车" class="headerlink" title="6. Hexo官网文档直通车"></a>6. <a href="https://hexo.io/zh-cn/docs/index.html" target="_blank" rel="noopener">Hexo官网文档直通车</a></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-自行安装-nodejs和git&quot;&gt;&lt;a href=&quot;#1-自行安装-nodejs和git&quot; class=&quot;headerlink&quot; title=&quot;1.  自行安装 nodejs和git&quot;&gt;&lt;/a&gt;1.  自行安装 nodejs和git&lt;/h2&gt;&lt;h2 id=&quot;2
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/03/26/hello-world/"/>
    <id>http://yoursite.com/2018/03/26/hello-world/</id>
    <published>2018-03-26T02:54:44.238Z</published>
    <updated>2017-09-12T03:46:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Css知识点和布局技巧</title>
    <link href="http://yoursite.com/2018/03/26/css%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>http://yoursite.com/2018/03/26/css知识点/</id>
    <published>2018-03-26T02:54:44.235Z</published>
    <updated>2018-01-25T06:57:34.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、让大banner图居中显示"><a href="#一、让大banner图居中显示" class="headerlink" title="一、让大banner图居中显示"></a>一、让大banner图居中显示</h2><p><strong> 1. 第一种写法: </strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span>  </span><br><span class="line">   <span class="tag">&lt;<span class="name">head</span>&gt;</span>  </span><br><span class="line">       <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span>  </span><br><span class="line">       <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined">  </span></span><br><span class="line"><span class="css">           <span class="selector-class">.bannerbox</span> &#123;  </span></span><br><span class="line"><span class="css">               <span class="selector-tag">min-width</span><span class="selector-pseudo">:1190px</span>;  </span></span><br><span class="line"><span class="css">               <span class="selector-tag">position</span><span class="selector-pseudo">:relative</span>;  </span></span><br><span class="line"><span class="css">               <span class="selector-tag">overflow</span><span class="selector-pseudo">:hidden</span>;  </span></span><br><span class="line"><span class="css">               <span class="selector-tag">height</span><span class="selector-pseudo">:500px</span>;  </span></span><br><span class="line"><span class="undefined">           &#125;  </span></span><br><span class="line"><span class="css">           <span class="selector-class">.banner</span> &#123;  </span></span><br><span class="line"><span class="css">               <span class="selector-tag">width</span><span class="selector-pseudo">:1920px</span>; <span class="comment">/*图片宽度*/</span>  </span></span><br><span class="line"><span class="css">               <span class="selector-tag">position</span><span class="selector-pseudo">:absolute</span>;  </span></span><br><span class="line"><span class="css">               <span class="selector-tag">left</span><span class="selector-pseudo">:50</span>%;  </span></span><br><span class="line"><span class="css">               <span class="selector-tag">margin-left</span><span class="selector-pseudo">:-960px</span>; <span class="comment">/*图片宽度的一半*/</span>  </span></span><br><span class="line"><span class="undefined">           &#125;  </span></span><br><span class="line"><span class="undefined">       </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span>  </span><br><span class="line">   <span class="tag">&lt;/<span class="name">head</span>&gt;</span>  </span><br><span class="line">   <span class="tag">&lt;<span class="name">body</span>&gt;</span>  </span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bannerbox"</span>&gt;</span>  </span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"banner"</span>&gt;</span>  </span><br><span class="line">               <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"1.png"</span> /&gt;</span>   </span><br><span class="line">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span>   </span><br><span class="line">   <span class="tag">&lt;/<span class="name">body</span>&gt;</span>  </span><br><span class="line">   <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong> 2. 第二种写法 </strong><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span>  </span><br><span class="line">   <span class="tag">&lt;<span class="name">head</span>&gt;</span>  </span><br><span class="line">       <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span>  </span><br><span class="line">       <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined">  </span></span><br><span class="line"><span class="css">           <span class="selector-class">.banner</span> &#123;  </span></span><br><span class="line"><span class="css">               <span class="selector-tag">min-width</span><span class="selector-pseudo">:1190px</span>;  </span></span><br><span class="line"><span class="css">               <span class="selector-tag">position</span><span class="selector-pseudo">:relative</span>;  </span></span><br><span class="line"><span class="css">               <span class="selector-tag">overflow</span><span class="selector-pseudo">:hidden</span>;  </span></span><br><span class="line"><span class="css">               <span class="selector-tag">height</span><span class="selector-pseudo">:500px</span>;  </span></span><br><span class="line"><span class="undefined">           &#125;  </span></span><br><span class="line"><span class="css">           <span class="selector-class">.banner</span> <span class="selector-tag">img</span>&#123;  </span></span><br><span class="line"><span class="css">               <span class="selector-tag">width</span><span class="selector-pseudo">:1920px</span>; <span class="comment">/*图片宽度*/</span>  </span></span><br><span class="line"><span class="css">               <span class="selector-tag">position</span><span class="selector-pseudo">:absolute</span>;  </span></span><br><span class="line"><span class="css">               <span class="selector-tag">left</span><span class="selector-pseudo">:50</span>%;  </span></span><br><span class="line"><span class="css">               <span class="selector-tag">margin-left</span><span class="selector-pseudo">:-960px</span>; <span class="comment">/*图片宽度的一半*/</span>  </span></span><br><span class="line"><span class="undefined">           &#125;  </span></span><br><span class="line"><span class="undefined">       </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span>  </span><br><span class="line">   <span class="tag">&lt;/<span class="name">head</span>&gt;</span>  </span><br><span class="line">   <span class="tag">&lt;<span class="name">body</span>&gt;</span>   </span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"banner"</span>&gt;</span>  </span><br><span class="line">              <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"1.png"</span> /&gt;</span> </span><br><span class="line">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span>  </span><br><span class="line">   <span class="tag">&lt;/<span class="name">body</span>&gt;</span>  </span><br><span class="line">   <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、让大banner图居中显示&quot;&gt;&lt;a href=&quot;#一、让大banner图居中显示&quot; class=&quot;headerlink&quot; title=&quot;一、让大banner图居中显示&quot;&gt;&lt;/a&gt;一、让大banner图居中显示&lt;/h2&gt;&lt;p&gt;&lt;strong&gt; 1. 第一种写法:
      
    
    </summary>
    
    
  </entry>
  
</feed>
